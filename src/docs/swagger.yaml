openapi: 3.0.3
info:
  title: Turnity Backend API
  description: API REST para Turnity - Sistema de gestión de citas para salones de belleza
  version: 1.0.0
  contact:
    name: Turnity API Support
    email: fernandomoyano21@gmail.com

servers:
  - url: http://localhost:3000/api/v1
    description: Servidor de desarrollo
  - url: https://api.turnity.com/v1
    description: Servidor de producción

security:
  - BearerAuth: []

paths:
  # AUTHENTICATION
  /auth/register:
    post:
      tags: [Authentication]
      summary: Registrar nuevo usuario
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [name, email, phone, password]
              properties:
                name:
                  type: string
                  example: "Ana López"
                email:
                  type: string
                  format: email
                  example: "ana.lopez@example.com"
                phone:
                  type: string
                  example: "+5491123456789"
                password:
                  type: string
                  example: "MiPassword123!"
                roleName:
                  type: string
                  enum: [CLIENT, STYLIST, ADMIN]
                  example: "CLIENT"
      responses:
        '201':
          description: Usuario registrado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          $ref: '#/components/responses/Error400'
        '409':
          $ref: '#/components/responses/Error409'

  /auth/login:
    post:
      tags: [Authentication]
      summary: Iniciar sesión
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password]
              properties:
                email:
                  type: string
                  format: email
                  example: "ana.lopez@example.com"
                password:
                  type: string
                  example: "MiPassword123!"
      responses:
        '200':
          description: Login exitoso
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Login successful"
                  data:
                    type: object
                    properties:
                      token:
                        type: string
                        example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                      refreshToken:
                        type: string
                        example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                      user:
                        type: object
                        properties:
                          id:
                            type: string
                            example: "123e4567-e89b-12d3-a456-426614174000"
                          name:
                            type: string
                            example: "Ana López"
                          email:
                            type: string
                            example: "ana.lopez@example.com"
        '401':
          $ref: '#/components/responses/Error401'

  /auth/refresh-token:
    post:
      tags: [Authentication]
      summary: Renovar token de acceso
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [refreshToken]
              properties:
                refreshToken:
                  type: string
                  example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
      responses:
        '200':
          description: Token renovado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          $ref: '#/components/responses/Error401'

  /auth/profile:
    get:
      tags: [Authentication]
      summary: Obtener perfil del usuario
      responses:
        '200':
          description: Perfil obtenido exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          $ref: '#/components/responses/Error401'
    
    put:
      tags: [Authentication]
      summary: Actualizar perfil del usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "Ana María López"
                phone:
                  type: string
                  example: "+5491987654321"
                profilePicture:
                  type: string
                  example: "https://example.com/photo.jpg"
      responses:
        '200':
          description: Perfil actualizado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          $ref: '#/components/responses/Error400'
        '401':
          $ref: '#/components/responses/Error401'

  /auth/change-password:
    put:
      tags: [Authentication]
      summary: Cambiar contraseña
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [currentPassword, newPassword]
              properties:
                currentPassword:
                  type: string
                  example: "MiPassword123!"
                newPassword:
                  type: string
                  example: "NuevoPassword456!"
      responses:
        '200':
          description: Contraseña cambiada exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          $ref: '#/components/responses/Error400'
        '401':
          $ref: '#/components/responses/Error401'

  # CATEGORIES
  /services/categories:
    get:
      tags: [Categories]
      summary: Obtener todas las categorías
      security: []
      responses:
        '200':
          description: Categorías obtenidas exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Categories retrieved successfully"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Category'

    post:
      tags: [Categories]
      summary: Crear nueva categoría
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [name]
              properties:
                name:
                  type: string
                  example: "Tratamientos Faciales"
                description:
                  type: string
                  example: "Servicios de cuidado facial"
      responses:
        '201':
          description: Categoría creada exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          $ref: '#/components/responses/Error400'
        '401':
          $ref: '#/components/responses/Error401'
        '403':
          $ref: '#/components/responses/Error403'
        '409':
          $ref: '#/components/responses/Error409'

  /services/categories/active:
    get:
      tags: [Categories]
      summary: Obtener categorías activas
      security: []
      responses:
        '200':
          description: Categorías activas obtenidas exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Active categories retrieved successfully"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Category'

  /services/categories/{id}:
    get:
      tags: [Categories]
      summary: Obtener categoría por ID
      security: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: "123e4567-e89b-12d3-a456-426614174000"
      responses:
        '200':
          description: Categoría obtenida exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '404':
          $ref: '#/components/responses/Error404'

    put:
      tags: [Categories]
      summary: Actualizar categoría
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: "123e4567-e89b-12d3-a456-426614174000"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "Corte y Peinado Premium"
                description:
                  type: string
                  example: "Servicios premium de corte"
      responses:
        '200':
          description: Categoría actualizada exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          $ref: '#/components/responses/Error400'
        '401':
          $ref: '#/components/responses/Error401'
        '403':
          $ref: '#/components/responses/Error403'
        '404':
          $ref: '#/components/responses/Error404'
        '409':
          $ref: '#/components/responses/Error409'

    delete:
      tags: [Categories]
      summary: Eliminar categoría
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: "123e4567-e89b-12d3-a456-426614174000"
      responses:
        '200':
          description: Categoría eliminada exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          $ref: '#/components/responses/Error401'
        '403':
          $ref: '#/components/responses/Error403'
        '404':
          $ref: '#/components/responses/Error404'

  /services/categories/{id}/activate:
    patch:
      tags: [Categories]
      summary: Activar categoría
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: "123e4567-e89b-12d3-a456-426614174000"
      responses:
        '200':
          description: Categoría activada exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          $ref: '#/components/responses/Error401'
        '403':
          $ref: '#/components/responses/Error403'
        '404':
          $ref: '#/components/responses/Error404'

  /services/categories/{id}/deactivate:
    patch:
      tags: [Categories]
      summary: Desactivar categoría
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: "123e4567-e89b-12d3-a456-426614174000"
      responses:
        '200':
          description: Categoría desactivada exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          $ref: '#/components/responses/Error401'
        '403':
          $ref: '#/components/responses/Error403'
        '404':
          $ref: '#/components/responses/Error404'

# SERVICES
  /services:
    get:
      tags: [Services]
      summary: Obtener todos los servicios
      security: []
      responses:
        '200':
          description: Servicios obtenidos exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Services retrieved successfully"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Service'

    post:
      tags: [Services]
      summary: Crear nuevo servicio
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [categoryId, name, description, duration, durationVariation, price]
              properties:
                categoryId:
                  type: string
                  example: "123e4567-e89b-12d3-a456-426614174000"
                name:
                  type: string
                  example: "Corte Clásico Hombre"
                description:
                  type: string
                  example: "Corte tradicional con tijera y máquina"
                duration:
                  type: integer
                  example: 45
                durationVariation:
                  type: integer
                  example: 15
                price:
                  type: number
                  example: 25.00
      responses:
        '201':
          description: Servicio creado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          $ref: '#/components/responses/Error400'
        '401':
          $ref: '#/components/responses/Error401'
        '403':
          $ref: '#/components/responses/Error403'
        '409':
          $ref: '#/components/responses/Error409'

  /services/active:
    get:
      tags: [Services]
      summary: Obtener servicios activos
      security: []
      responses:
        '200':
          description: Servicios activos obtenidos exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Active services retrieved successfully"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Service'

  /services/{id}:
    get:
      tags: [Services]
      summary: Obtener servicio por ID
      security: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: "123e4567-e89b-12d3-a456-426614174000"
      responses:
        '200':
          description: Servicio obtenido exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '404':
          $ref: '#/components/responses/Error404'

    put:
      tags: [Services]
      summary: Actualizar servicio
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: "123e4567-e89b-12d3-a456-426614174000"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                categoryId:
                  type: string
                  example: "123e4567-e89b-12d3-a456-426614174000"
                name:
                  type: string
                  example: "Corte Premium Hombre"
                description:
                  type: string
                  example: "Corte premium con tratamiento"
                duration:
                  type: integer
                  example: 60
                durationVariation:
                  type: integer
                  example: 20
                price:
                  type: number
                  example: 30.00
      responses:
        '200':
          description: Servicio actualizado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          $ref: '#/components/responses/Error400'
        '401':
          $ref: '#/components/responses/Error401'
        '403':
          $ref: '#/components/responses/Error403'
        '404':
          $ref: '#/components/responses/Error404'
        '409':
          $ref: '#/components/responses/Error409'

    delete:
      tags: [Services]
      summary: Eliminar servicio
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: "123e4567-e89b-12d3-a456-426614174000"
      responses:
        '200':
          description: Servicio eliminado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          $ref: '#/components/responses/Error401'
        '403':
          $ref: '#/components/responses/Error403'
        '404':
          $ref: '#/components/responses/Error404'

  /services/category/{categoryId}:
    get:
      tags: [Services]
      summary: Servicios por categoría
      security: []
      parameters:
        - name: categoryId
          in: path
          required: true
          schema:
            type: string
            example: "123e4567-e89b-12d3-a456-426614174000"
      responses:
        '200':
          description: Servicios de categoría obtenidos exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Services by category retrieved successfully"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Service'
        '404':
          $ref: '#/components/responses/Error404'

  /services/category/{categoryId}/active:
    get:
      tags: [Services]
      summary: Servicios activos por categoría
      security: []
      parameters:
        - name: categoryId
          in: path
          required: true
          schema:
            type: string
            example: "123e4567-e89b-12d3-a456-426614174000"
      responses:
        '200':
          description: Servicios activos de categoría obtenidos exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Active services by category retrieved successfully"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Service'
        '404':
          $ref: '#/components/responses/Error404'

  /services/{id}/activate:
    patch:
      tags: [Services]
      summary: Activar servicio
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: "123e4567-e89b-12d3-a456-426614174000"
      responses:
        '200':
          description: Servicio activado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          $ref: '#/components/responses/Error401'
        '403':
          $ref: '#/components/responses/Error403'
        '404':
          $ref: '#/components/responses/Error404'

  /services/{id}/deactivate:
    patch:
      tags: [Services]
      summary: Desactivar servicio
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: "123e4567-e89b-12d3-a456-426614174000"
      responses:
        '200':
          description: Servicio desactivado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          $ref: '#/components/responses/Error401'
        '403':
          $ref: '#/components/responses/Error403'
        '404':
          $ref: '#/components/responses/Error404'

# STYLIST SERVICES
  /stylists/{stylistId}/services:
    get:
      tags: [Stylist Services]
      summary: Servicios de un estilista
      security: []
      parameters:
        - name: stylistId
          in: path
          required: true
          schema:
            type: string
            example: "123e4567-e89b-12d3-a456-426614174000"
      responses:
        '200':
          description: Servicios del estilista obtenidos exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Stylist services retrieved successfully"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/StylistService'
        '404':
          $ref: '#/components/responses/Error404'

    post:
      tags: [Stylist Services]
      summary: Asignar servicio a estilista
      parameters:
        - name: stylistId
          in: path
          required: true
          schema:
            type: string
            example: "123e4567-e89b-12d3-a456-426614174000"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [serviceId]
              properties:
                serviceId:
                  type: string
                  example: "123e4567-e89b-12d3-a456-426614174000"
                customPrice:
                  type: number
                  example: 35.00
      responses:
        '201':
          description: Servicio asignado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          $ref: '#/components/responses/Error400'
        '401':
          $ref: '#/components/responses/Error401'
        '403':
          $ref: '#/components/responses/Error403'
        '409':
          $ref: '#/components/responses/Error409'

  /stylists/{stylistId}/services/active:
    get:
      tags: [Stylist Services]
      summary: Servicios que ofrece activamente
      security: []
      parameters:
        - name: stylistId
          in: path
          required: true
          schema:
            type: string
            example: "123e4567-e89b-12d3-a456-426614174000"
      responses:
        '200':
          description: Servicios activos del estilista obtenidos exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Active stylist offerings retrieved successfully"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/StylistService'
        '404':
          $ref: '#/components/responses/Error404'

  /stylists/{stylistId}/services/detailed:
    get:
      tags: [Stylist Services]
      summary: Estilista con servicios detallados
      security: []
      parameters:
        - name: stylistId
          in: path
          required: true
          schema:
            type: string
            example: "123e4567-e89b-12d3-a456-426614174000"
      responses:
        '200':
          description: Estilista con servicios obtenido exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '404':
          $ref: '#/components/responses/Error404'

  /stylists/{stylistId}/services/{serviceId}:
    put:
      tags: [Stylist Services]
      summary: Actualizar relación estilista-servicio
      parameters:
        - name: stylistId
          in: path
          required: true
          schema:
            type: string
            example: "123e4567-e89b-12d3-a456-426614174000"
        - name: serviceId
          in: path
          required: true
          schema:
            type: string
            example: "123e4567-e89b-12d3-a456-426614174000"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                customPrice:
                  type: number
                  example: 40.00
                isOffering:
                  type: boolean
                  example: true
      responses:
        '200':
          description: Relación actualizada exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          $ref: '#/components/responses/Error400'
        '401':
          $ref: '#/components/responses/Error401'
        '403':
          $ref: '#/components/responses/Error403'
        '404':
          $ref: '#/components/responses/Error404'

    delete:
      tags: [Stylist Services]
      summary: Remover servicio de estilista
      parameters:
        - name: stylistId
          in: path
          required: true
          schema:
            type: string
            example: "123e4567-e89b-12d3-a456-426614174000"
        - name: serviceId
          in: path
          required: true
          schema:
            type: string
            example: "123e4567-e89b-12d3-a456-426614174000"
      responses:
        '200':
          description: Servicio removido exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          $ref: '#/components/responses/Error401'
        '403':
          $ref: '#/components/responses/Error403'
        '404':
          $ref: '#/components/responses/Error404'

  /services/{serviceId}/stylists:
    get:
      tags: [Stylist Services]
      summary: Estilistas de un servicio
      security: []
      parameters:
        - name: serviceId
          in: path
          required: true
          schema:
            type: string
            example: "123e4567-e89b-12d3-a456-426614174000"
      responses:
        '200':
          description: Estilistas del servicio obtenidos exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Service stylists retrieved successfully"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/StylistService'
        '404':
          $ref: '#/components/responses/Error404'

  /services/{serviceId}/stylists/offering:
    get:
      tags: [Stylist Services]
      summary: Estilistas que ofrecen el servicio
      security: []
      parameters:
        - name: serviceId
          in: path
          required: true
          schema:
            type: string
            example: "123e4567-e89b-12d3-a456-426614174000"
      responses:
        '200':
          description: Estilistas que ofrecen el servicio obtenidos exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Stylists offering service retrieved successfully"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/StylistService'
        '404':
          $ref: '#/components/responses/Error404'

  /services/{serviceId}/stylists/detailed:

    get:
      tags: [Stylist Services]
      summary: Servicio con estilistas detallados
      security: []
      parameters:
        - name: serviceId
          in: path
          required: true
          schema:
            type: string
            example: "123e4567-e89b-12d3-a456-426614174000"
      responses:
        '200':
          description: Servicio con estilistas obtenido exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '404':
          $ref: '#/components/responses/Error404'


components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    SuccessResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: "Operation completed successfully"
        data:
          type: object

    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          example: "Error description"
        code:
          type: string
          example: "ERROR_CODE"

    Category:
      type: object
      properties:
        id:
          type: string
          example: "123e4567-e89b-12d3-a456-426614174000"
        name:
          type: string
          example: "Corte de Cabello"
        description:
          type: string
          example: "Servicios de corte y peinado"
        isActive:
          type: boolean
          example: true
        servicesCount:
          type: integer
          example: 5
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    Service:
      type: object
      properties:
        id:
          type: string
          example: "123e4567-e89b-12d3-a456-426614174000"
        name:
          type: string
          example: "Corte Clásico Hombre"
        description:
          type: string
          example: "Corte tradicional para hombre"
        duration:
          type: integer
          example: 45
        durationVariation:
          type: integer
          example: 15
        minDuration:
          type: integer
          example: 30
        maxDuration:
          type: integer
          example: 60
        price:
          type: integer
          example: 2500
        formattedPrice:
          type: string
          example: "25.00"
        isActive:
          type: boolean
          example: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    StylistService:
      type: object
      properties:
        stylistId:
          type: string
          example: "123e4567-e89b-12d3-a456-426614174000"
        serviceId:
          type: string
          example: "123e4567-e89b-12d3-a456-426614174000"
        serviceName:
          type: string
          example: "Corte Clásico Hombre"
        serviceDescription:
          type: string
          example: "Corte tradicional para hombre"
        baseDuration:
          type: integer
          example: 45
        basePrice:
          type: integer
          example: 2500
        customPrice:
          type: integer
          example: 3000
        effectivePrice:
          type: integer
          example: 3000
        formattedEffectivePrice:
          type: string
          example: "30.00"
        isOffering:
          type: boolean
          example: true
        hasCustomPrice:
          type: boolean
          example: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

  responses:
    Error400:
      description: Datos de entrada inválidos
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            success: false
            message: "Validation failed"
            code: "VALIDATION_ERROR"

    Error401:
      description: Token no válido o faltante
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            success: false
            message: "Invalid or missing token"
            code: "UNAUTHORIZED"

    Error403:
      description: Permisos insuficientes
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            success: false
            message: "Insufficient permissions"
            code: "FORBIDDEN"

    Error404:
      description: Recurso no encontrado
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            success: false
            message: "Resource not found"
            code: "NOT_FOUND"

    Error409:
      description: Conflicto con datos existentes
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            success: false
            message: "Resource already exists"
            code: "CONFLICT"

tags:
  - name: Authentication
    description: Endpoints para autenticación y gestión de sesiones
    
  - name: Categories
    description: Gestión de categorías de servicios (Consulta pública, modificación solo ADMIN)
      
  - name: Services  
    description: Gestión de servicios del salón (Consulta pública, modificación solo ADMIN)

  - name: Stylist Services
    description: Relación entre estilistas y servicios (Consulta pública, modificación ADMIN/STYLIST)