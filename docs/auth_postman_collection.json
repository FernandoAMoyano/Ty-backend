{
  "info": {
    "name": "Turnity API",
    "description": "Colección completa de endpoints para Turnity Backend API",
    "version": "1.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:3000/api/v1",
      "type": "string"
    },
    {
      "key": "jwt_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "refresh_token", 
      "value": "",
      "type": "string"
    }
  ],
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{jwt_token}}",
        "type": "string"
      }
    ]
  },
  "item": [
    {
      "name": "🔐 Authentication",
      "item": [
        {
          "name": "Register New User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    console.log('Usuario registrado:', response.data.email);",
                  "    console.log('ID del usuario:', response.data.id);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Ana López\",\n  \"email\": \"ana.lopez@example.com\",\n  \"phone\": \"+5491123456789\",\n  \"password\": \"MiPassword123!\",\n  \"roleId\": \"client-role-id\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/register",
              "host": ["{{base_url}}"],
              "path": ["auth", "register"]
            },
            "description": "Registra un nuevo usuario en el sistema (diferente a los del seed)"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"Ana López\",\n  \"email\": \"ana.lopez@example.com\",\n  \"phone\": \"+5491123456789\",\n  \"password\": \"MiPassword123!\",\n  \"roleId\": \"client-role-id\"\n}"
                },
                "url": {
                  "raw": "{{base_url}}/auth/register"
                }
              },
              "status": "Created",
              "code": 201,
              "body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": \"uuid-del-usuario\",\n    \"name\": \"Ana López\",\n    \"email\": \"ana.lopez@example.com\",\n    \"phone\": \"+5491123456789\",\n    \"isActive\": true,\n    \"role\": {\n      \"id\": \"client-role-id\",\n      \"name\": \"CLIENT\",\n      \"description\": \"Cliente que puede agendar citas\"\n    },\n    \"createdAt\": \"2025-06-14T10:30:00.000Z\",\n    \"updatedAt\": \"2025-06-14T10:30:00.000Z\"\n  },\n  \"message\": \"User registered successfully\"\n}"
            }
          ]
        },
        {
          "name": "Login New User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('jwt_token', response.data.token);",
                  "    pm.collectionVariables.set('refresh_token', response.data.refreshToken);",
                  "    console.log('Login exitoso. Token guardado.');",
                  "    console.log('Usuario logueado:', response.data.user.email);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"ana.lopez@example.com\",\n  \"password\": \"MiPassword123!\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/login",
              "host": ["{{base_url}}"],
              "path": ["auth", "login"]
            },
            "description": "Autentica el usuario recién registrado"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"ana.lopez@example.com\",\n  \"password\": \"MiPassword123!\"\n}"
                }
              },
              "status": "OK",
              "code": 200,
              "body": "{\n  \"success\": true,\n  \"data\": {\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\",\n    \"refreshToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\",\n    \"user\": {\n      \"id\": \"uuid-del-usuario\",\n      \"name\": \"Ana López\",\n      \"email\": \"ana.lopez@example.com\",\n      \"role\": {\n        \"id\": \"client-role-id\",\n        \"name\": \"CLIENT\"\n      }\n    }\n  },\n  \"message\": \"Login successful\"\n}"
            }
          ]
        },
        {
          "name": "Refresh Token",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('jwt_token', response.data.token);",
                  "    pm.collectionVariables.set('refresh_token', response.data.refreshToken);",
                  "    console.log('Token renovado exitosamente.');",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"refreshToken\": \"{{refresh_token}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/refresh-token",
              "host": ["{{base_url}}"],
              "path": ["auth", "refresh-token"]
            },
            "description": "Renueva el JWT token usando el refresh token"
          }
        }
      ]
    },
    {
      "name": "👤 Profile Management",
      "item": [
        {
          "name": "Get Profile",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/auth/profile",
              "host": ["{{base_url}}"],
              "path": ["auth", "profile"]
            },
            "description": "Obtiene el perfil del usuario autenticado"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{jwt_token}}"
                  }
                ]
              },
              "status": "OK",
              "code": 200,
              "body": "{\n  \"success\": true,\n  \"data\": {\n    \"id\": \"uuid-del-usuario\",\n    \"name\": \"Ana López\",\n    \"email\": \"ana.lopez@example.com\",\n    \"phone\": \"+5491123456789\",\n    \"isActive\": true,\n    \"profilePicture\": \"https://example.com/photo.jpg\",\n    \"role\": {\n      \"id\": \"client-role-id\",\n      \"name\": \"CLIENT\",\n      \"description\": \"Cliente que puede agendar citas\"\n    },\n    \"createdAt\": \"2025-06-14T10:30:00.000Z\",\n    \"updatedAt\": \"2025-06-14T10:30:00.000Z\"\n  },\n  \"message\": \"Profile retrieved successfully\"\n}"
            }
          ]
        },
        {
          "name": "Update Profile",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Ana María López\",\n  \"phone\": \"+5491987654321\",\n  \"profilePicture\": \"https://example.com/new-photo.jpg\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/profile",
              "host": ["{{base_url}}"],
              "path": ["auth", "profile"]
            },
            "description": "Actualiza el perfil del usuario autenticado"
          }
        },
        {
          "name": "Change Password",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"currentPassword\": \"MiPassword123!\",\n  \"newPassword\": \"NuevoPassword456!\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/change-password",
              "host": ["{{base_url}}"],
              "path": ["auth", "change-password"]
            },
            "description": "Cambia la contraseña del usuario autenticado"
          }
        }
      ]
    },
    {
      "name": "🧪 Test with Seed Users",
      "description": "Pruebas usando los usuarios creados automáticamente en el seed",
      "item": [
        {
          "name": "Login - Cliente María (Seed)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('jwt_token', response.data.token);",
                  "    pm.collectionVariables.set('refresh_token', response.data.refreshToken);",
                  "    console.log('Login exitoso con usuario del seed');",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"maria@example.com\",\n  \"password\": \"client123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/login",
              "host": ["{{base_url}}"],
              "path": ["auth", "login"]
            },
            "description": "Login con usuario del seed (María García)"
          }
        },
        {
          "name": "Login - Admin (Seed)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('jwt_token', response.data.token);",
                  "    pm.collectionVariables.set('refresh_token', response.data.refreshToken);",
                  "    console.log('Login exitoso como administrador');",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"admin@turnity.com\",\n  \"password\": \"admin123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/login",
              "host": ["{{base_url}}"],
              "path": ["auth", "login"]
            },
            "description": "Login con usuario administrador del seed"
          }
        },
        {
          "name": "Login - Estilista Lucía (Seed)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('jwt_token', response.data.token);",
                  "    pm.collectionVariables.set('refresh_token', response.data.refreshToken);",
                  "    console.log('Login exitoso como estilista');",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"lucia@turnity.com\",\n  \"password\": \"stylist123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/login",
              "host": ["{{base_url}}"],
              "path": ["auth", "login"]
            },
            "description": "Login con estilista del seed (Lucía Rodríguez)"
          }
        }
      ]
    },
    {
      "name": "🚨 Error Scenarios",
      "item": [
        {
          "name": "Invalid Login",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"usuario.inexistente@example.com\",\n  \"password\": \"passwordincorrecto\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/login",
              "host": ["{{base_url}}"],
              "path": ["auth", "login"]
            },
            "description": "Test para credenciales inválidas (debería retornar 401)"
          }
        },
        {
          "name": "Register with Duplicate Email",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Test User\",\n  \"email\": \"maria@example.com\",\n  \"phone\": \"+1234567890\",\n  \"password\": \"TestPass123!\",\n  \"roleId\": \"client-role-id\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/register",
              "host": ["{{base_url}}"],
              "path": ["auth", "register"]
            },
            "description": "Test para email duplicado usando un email del seed (debería retornar 409)"
          }
        },
        {
          "name": "Unauthorized Access",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/auth/profile",
              "host": ["{{base_url}}"],
              "path": ["auth", "profile"]
            },
            "description": "Test para acceso sin token (debería retornar 401)"
          }
        },
        {
          "name": "Invalid Token",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer invalid.token.here",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/auth/profile",
              "host": ["{{base_url}}"],
              "path": ["auth", "profile"]
            },
            "description": "Test para token inválido (debería retornar 401)"
          }
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Script que se ejecuta antes de cada request",
          "console.log('Ejecutando request a:', pm.request.url);",
          "console.log('Método:', pm.request.method);"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Script que se ejecuta después de cada request",
          "console.log('Response status:', pm.response.code);",
          "console.log('Response time:', pm.response.responseTime + 'ms');"
        ]
      }
    }
  ]
}